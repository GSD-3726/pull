name: 定时同步触发Gitee流水线
on:
  schedule:
    - cron: '0 */2 * * *'  # UTC时间10点（北京时间18点）
  workflow_dispatch:

jobs:
  trigger-gitee-pipeline:
    runs-on: ubuntu-latest
    concurrency: sync-gitee  # 添加并发控制，确保同一时间只有一个作业运行
    steps:
      - name: Checkout GitHub Repo
        uses: actions/checkout@v4
      
      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
      
      - name: Sync to Gitee & Trigger Pipeline
        env:
          GITEE_TOKEN: ${{ secrets.GITEE_TOKEN }}   # 修正：使用正确的 secrets 引用语法
          GITEE_REPO: "gitee.com/bmg369/test.git"   # 修正：移除 https://
          GITEE_BRANCH: "master"
        run: |
          # 克隆 Gitee 仓库
          git clone --depth 1 -b $GITEE_BRANCH "https://oauth2:${GITEE_TOKEN}@${GITEE_REPO}" gitee-repo
          cd gitee-repo
          
          # 检查是否有实际变更（避免不必要提交）
          TIMESTAMP_CONTENT="Last sync at: $(date +'%Y-%m-%d %H:%M:%S')"
          CURRENT_CONTENT=$(cat .sync-timestamp 2>/dev/null || echo "")
          
          if [ "$CURRENT_CONTENT" = "$TIMESTAMP_CONTENT" ]; then
            echo "没有新的变更，跳过同步"
            exit 0
          fi
          
          # 更新同步时间戳
          echo "$TIMESTAMP_CONTENT" > .sync-timestamp
          git add .sync-timestamp
          
          # 检查是否有变更需要提交
          if git diff --staged --quiet; then
            echo "没有变更需要提交"
            exit 0
          fi
          
          # 提交并推送
          git commit -m "Auto sync from GitHub Actions (trigger pipeline) - $(date +'%Y%m%d%H%M%S')"
          git push origin $GITEE_BRANCH
          echo "同步完成，已触发 Gitee Go 流水线"
