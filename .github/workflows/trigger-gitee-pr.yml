name: Trigger Gitee Pipeline via Branch Push
on:
  workflow_dispatch:

jobs:
  trigger-gitee-pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout GitHub code (Full History)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Verify Gitee token and repo (fail fast with clear message)
        env:
          GITEE_TOKEN: ${{ secrets.GITEE_TOKEN }}
          GITEE_REPO: ${{ secrets.GITEE_REPO }}
        run: |
          echo "Checking Gitee token..."
          curl -fsS "https://gitee.com/api/v5/user?access_token=${GITEE_TOKEN}" || { echo "ERROR: GITEE_TOKEN invalid or network issue"; exit 1; }
          echo "Checking repo exists and token has access..."
          curl -fsS "https://gitee.com/api/v5/repos/${GITEE_REPO}?access_token=${GITEE_TOKEN}" || { echo "ERROR: repo not found or no access (check GITEE_REPO=owner/repo)"; exit 1; }

      - name: Add Gitee remote (using http.extraHeader to avoid URL-encoding issues)
        env:
          GITEE_USERNAME: ${{ secrets.GITEE_USERNAME }}
          GITEE_TOKEN: ${{ secrets.GITEE_TOKEN }}
          GITEE_REPO: ${{ secrets.GITEE_REPO }}
        run: |
          # 确保 GITEE_REPO 是 owner/repo
          OWNER_REPO="${GITEE_REPO}"
          REMOTE_URL="https://gitee.com/${OWNER_REPO}.git"
          git remote add gitee "${REMOTE_URL}"
          # 使用 Basic auth header（base64 编码 user:token）
          AUTH=$(printf "%s:%s" "${GITEE_USERNAME}" "${GITEE_TOKEN}" | base64 -w0)
          git -c http.extraHeader="Authorization: Basic ${AUTH}" push gitee HEAD:trigger/pipeline-20251024 || { echo "Push failed"; git remote -v; exit 1; }
          echo "已推送至 gitee (${REMOTE_URL}) 分支 trigger/pipeline-20251024"
